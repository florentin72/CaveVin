{"version":3,"sources":["../../src/pages/listvin/listvin.module.ts","../../src/pages/listvin/listvin.ts","../../src/model/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACR;AAUxC;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAR7B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAW;aACZ;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;aACtC;SACF,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACZY;AACe;AACoB;AAGO;AAC1C;AAG1C;;;;;GAKG;AAOH;IAOE,qBAAmB,OAAsB,EAAS,SAAoB,EAAU,OAA4B,EAAU,EAAwB;QAA3H,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,YAAO,GAAP,OAAO,CAAqB;QAAU,OAAE,GAAF,EAAE,CAAsB;QALvI,QAAG,GAAG,aAAa,CAAC;QAC7B,aAAQ,GAAY,EAAE,CAAC;QAKvB,IAAI,CAAC,EAAE,GAAG,2DAAK,CAAC,SAAS,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,EAAE,GAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAC,IAAG,cAAO,CAAC,GAAG,CAAC,WAAW,GAAC,CAAC,CAAC,MAAM,CAAC,EAAjC,CAAiC,CAAC,CAAC;QAE3D;;;;;;;;;cASM;QAML,OAAO,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,0BAAqB,IAAI,CAAC,QAAQ,CAAC,MAAQ,CAAC,CAAC;QAEpE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhE,CAAC;IAED,oCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC5C,CAAC;IAED,iCAAW,GAAX,UAAY,IAAU;QAKpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAC,EAAC,OAAO,EAAG,IAAI,EAAC,CAAE,CAAC;IAGlD,CAAC;IA7CU,WAAW;QAJvB,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;oBAQ8I;OAPnI,WAAW,CA+CvB;IAAD,CAAC;AAAA;SA/CY,WAAW,e;;;;;;;;;;;ACrBY;AACpC;IAAA;IAyBA,CAAC;IAvBa,eAAS,GAAvB;QAEI,IAAI,IAAI,GAAG,8CAAa,EAAE,CAAC,WAAW,CAAC;QACvC,IAAI,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,aAAa,CAAC;QAE9C,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACjB,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YACxB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACnB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACzB,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YACnC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAE,4DAA4D;YAC3E,OAAO,CAAC,GAAG,CAAC,sCAAsC,GAAG,GAAG,CAAC,CAAC;YAC5C,0DAA0D;YAC1D,6CAA6C;QAM/D,CAAC;QACL,MAAM,CAAC,GAAG,CAAC;IACX,CAAC;IAED,YAAC;AAAD,CAAC","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ListvinPage } from './listvin';\n\n@NgModule({\n  declarations: [\n    ListvinPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ListvinPage),\n  ],\n})\nexport class ListvinPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/listvin/listvin.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { VinServiceProvider } from '../../providers/vin-service/vin-service';\nimport { Vin } from '../../model/vin';\nimport * as firebase from 'firebase'\nimport { FirebaseListObservable, AngularFireDatabase } from 'angularfire2/database';\nimport { Utils } from '../../model/utils';\n\n\n/**\n * Generated class for the ListvinPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-listvin',\n  templateUrl: 'listvin.html',\n})\nexport class ListvinPage {\n\nreadonly TAG = \"PageListVin\";\nlistVins : Vin [] = [];\n\nlistRef : FirebaseListObservable<Vin[]>;\nid : string;\n  constructor(public navCtrl: NavController, public navParams: NavParams, private service : VinServiceProvider,private  db : AngularFireDatabase) {\nthis.id = Utils.getUserId();\nthis.listRef = this.db.list('users/'+this.id+'/listVin');\nthis.listRef.subscribe(x=> console.log(\"des trucs\"+x.length));\n\n   /* this.ref= firebase.database().ref(\"users/tq3svEgOmUTJjCzPAN3zxO8HiAl2/listVin\");\n    \n    // Récupération de la liste des pinards\n    this.ref.on('value',ItemSnapShot =>{\n      ItemSnapShot.forEach(ItemSnap =>\n      {\n        this.listVins.push(ItemSnap.val());\n        return false;\n      });      \n    });*/\n\n\n\n\n\n    console.log(`${this.TAG} listVins taille: ${this.listVins.length}`);\n\n    console.log(this.TAG + \"constructeur \\n \" + this.listVins[0]);\n    \n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ListvinPage');\n  }\n\n  onClickInfo(wine : Vin ){\n\n\n    \n    \n    this.navCtrl.push('InfoPage',{theWine : wine} );\n\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/listvin/listvin.ts","import * as firebase from 'firebase'\r\nexport class Utils {\r\n\r\npublic static getUserId(): string{\r\n\r\n    var user = firebase.auth().currentUser;\r\n    var name, email, photoUrl, uid, emailVerified;\r\n\r\n    if (user != null) {\r\n      name = user.displayName;\r\n      email = user.email;\r\n      photoUrl = user.photoURL;\r\n      emailVerified = user.emailVerified;\r\n      uid = user.uid;  // The user's ID, unique to the Firebase project. Do NOT use\r\n        console.log(\"il y a un utilisateur son id est :  \" + uid);\r\n                      // this value to authenticate with your backend server, if\r\n                      // you have one. Use User.getToken() instead.\r\n                      \r\n\r\n\r\n\r\n\r\n    }\r\nreturn uid;\r\n}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/utils.ts"],"sourceRoot":""}